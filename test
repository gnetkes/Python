test = ["bob", 'asdad', 'asdads']
for test1 in test:
    print("you're ugly " + test1)

# 1
def bobby(lol1,lol2,lol3):
    dumb = max(lol1,lol2,lol3)
    print(dumb)

bobby(10312,3584641,3123116)
#2
time_list = [21,56,2654,854,2,6,346]
print(sorted(time_list))

#3
def area(length,height):
    return length*height

area1 =area(10,5)
area2 = area(20,2)
sum_area = area1 + area2
print("this is the total area dumbass, "+ str(sum_area))

#4
def lucky_number(name):
    number = len(name)*9
    print("hey", name, "your lucky number is",number)

lucky_number('boasbk')
lucky_number('teng')

#5
print(1 != 2)

#6
def username_length(username):
    if len(username) > 20:
        print("get ur shit tgt too long")
    elif len(username) <3:
        print("too short broski")
    else: 
        print("goodjob")

username_length('ah8nln;lnjklbbjklbjklbjkllilbkbl')

#7 % is MOD formula

def calculate_storage(filesize):
    block_size = 4096
    # Use floor division to calculate how many blocks are fully occupied
    full_blocks = filesize//block_size
    # Use the modulo operator to check whether there's any remainder
    partial_block_remainder = filesize % block_size
    # Depending on whether there's a remainder or not, return
    # the total number of bytes required to allocate enough blocks
    # to store your data.
    if partial_block_remainder > 0:
        return (full_blocks+1)*block_size
    return full_blocks*block_size

print(calculate_storage(1))    # Should be 4096
print(calculate_storage(4096)) # Should be 4096
print(calculate_storage(4097)) # Should be 8192
print(calculate_storage(6000)) # Should be 8192

#8 While LOOP - keepings looping until condition is true

x = 0
while x<10:
    print("hey",x," is less than 10")
    x = x+1
print("x= ", x)

y=1
while y <20:
    print("hey broski, its only",y, "you gotta get to 20")
    y = (y+1)*2
print("done, you have ",y, "now")